//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package private.v1;

import "google/api/annotations.proto";
import "private/v1/hub_type.proto";

message HubsListRequest {
  optional int32 offset = 1;
  optional int32 limit = 2;
  optional string filter = 3;
}

message HubsListResponse {
  optional int32 size = 1;
  optional int32 total = 2;
  repeated Hub items = 3;
}

message HubsGetRequest {
  string id = 1;
}

message HubsGetResponse {
  Hub object = 1;
}

message HubsCreateRequest {
  Hub object = 1;
}

message HubsCreateResponse {
  Hub object = 1;
}

message HubsDeleteRequest {
  string id = 1;
}

message HubsDeleteResponse {}

message HubsUpdateRequest {
  Hub object = 1;
}

message HubsUpdateResponse {
  Hub object = 1;
}

service Hubs {
  rpc List(HubsListRequest) returns (HubsListResponse) {
    option (google.api.http) = {get: "/api/private/v1/hubs"};
  }

  rpc Get(HubsGetRequest) returns (HubsGetResponse) {
    option (google.api.http) = {
      get: "/api/private/v1/hubs/{id}"
      response_body: "object"
    };
  }

  rpc Create(HubsCreateRequest) returns (HubsCreateResponse) {
    option (google.api.http) = {
      post: "/api/private/v1/hubs"
      body: "object"
      response_body: "object"
    };
  }

  rpc Delete(HubsDeleteRequest) returns (HubsDeleteResponse) {
    option (google.api.http) = {delete: "/api/private/v1/hubs/{id}"};
  }

  rpc Update(HubsUpdateRequest) returns (HubsUpdateResponse) {
    option (google.api.http) = {
      patch: "/api/private/v1/hubs/{object.id}"
      body: "object"
      response_body: "object"
    };
  }
}
