//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package private.v1;

import "google/api/annotations.proto";
import "private/v1/host_class_type.proto";

message HostClassesListRequest {
  optional int32 offset = 1;
  optional int32 limit = 2;
  optional string filter = 3;
  optional string order = 4;
}

message HostClassesListResponse {
  optional int32 size = 3;
  optional int32 total = 4;
  repeated HostClass items = 5;
}

message HostClassesGetRequest {
  string id = 1;
}

message HostClassesGetResponse {
  HostClass object = 1;
}

message HostClassesCreateRequest {
  HostClass object = 1;
}

message HostClassesCreateResponse {
  HostClass object = 1;
}

message HostClassesUpdateRequest {
  HostClass object = 1;
}

message HostClassesUpdateResponse {
  HostClass object = 1;
}

message HostClassesDeleteRequest {
  string id = 1;
}

message HostClassesDeleteResponse {}

service HostClasses {
  rpc List(HostClassesListRequest) returns (HostClassesListResponse) {
    option (google.api.http) = {get: "/api/private/v1/host_classes"};
  }

  rpc Get(HostClassesGetRequest) returns (HostClassesGetResponse) {
    option (google.api.http) = {
      get: "/api/private/v1/host_classes/{id}"
      response_body: "object"
    };
  }

  rpc Create(HostClassesCreateRequest) returns (HostClassesCreateResponse) {
    option (google.api.http) = {
      post: "/api/private/v1/host_classes"
      body: "object"
      response_body: "object"
    };
  }

  rpc Update(HostClassesUpdateRequest) returns (HostClassesUpdateResponse) {
    option (google.api.http) = {
      patch: "/api/private/v1/host_classes/{object.id}"
      body: "object"
      response_body: "object"
    };
  }

  rpc Delete(HostClassesDeleteRequest) returns (HostClassesDeleteResponse) {
    option (google.api.http) = {delete: "/api/private/v1/host_classes/{id}"};
  }
}
