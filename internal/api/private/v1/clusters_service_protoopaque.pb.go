//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: private/v1/clusters_service.proto

//go:build protoopaque

package privatev1

import (
	v1 "github.com/innabox/fulfillment-service/internal/api/fulfillment/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClustersListRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Offset      int32                  `protobuf:"varint,1,opt,name=offset,proto3,oneof"`
	xxx_hidden_Limit       int32                  `protobuf:"varint,2,opt,name=limit,proto3,oneof"`
	xxx_hidden_Filter      *string                `protobuf:"bytes,3,opt,name=filter,proto3,oneof"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClustersListRequest) Reset() {
	*x = ClustersListRequest{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersListRequest) ProtoMessage() {}

func (x *ClustersListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersListRequest) GetOffset() int32 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *ClustersListRequest) GetLimit() int32 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *ClustersListRequest) GetFilter() string {
	if x != nil {
		if x.xxx_hidden_Filter != nil {
			return *x.xxx_hidden_Filter
		}
		return ""
	}
	return ""
}

func (x *ClustersListRequest) SetOffset(v int32) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ClustersListRequest) SetLimit(v int32) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ClustersListRequest) SetFilter(v string) {
	x.xxx_hidden_Filter = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ClustersListRequest) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClustersListRequest) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClustersListRequest) HasFilter() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ClustersListRequest) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Offset = 0
}

func (x *ClustersListRequest) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Limit = 0
}

func (x *ClustersListRequest) ClearFilter() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Filter = nil
}

type ClustersListRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Offset *int32
	Limit  *int32
	Filter *string
}

func (b0 ClustersListRequest_builder) Build() *ClustersListRequest {
	m0 := &ClustersListRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Offset = *b.Offset
	}
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Limit = *b.Limit
	}
	if b.Filter != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Filter = b.Filter
	}
	return m0
}

type ClustersListResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Size        int32                  `protobuf:"varint,1,opt,name=size,proto3,oneof"`
	xxx_hidden_Total       int32                  `protobuf:"varint,2,opt,name=total,proto3,oneof"`
	xxx_hidden_Public      *[]*v1.Cluster         `protobuf:"bytes,3,rep,name=public,proto3"`
	xxx_hidden_Private     *[]*Cluster            `protobuf:"bytes,4,rep,name=private,proto3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClustersListResponse) Reset() {
	*x = ClustersListResponse{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersListResponse) ProtoMessage() {}

func (x *ClustersListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersListResponse) GetSize() int32 {
	if x != nil {
		return x.xxx_hidden_Size
	}
	return 0
}

func (x *ClustersListResponse) GetTotal() int32 {
	if x != nil {
		return x.xxx_hidden_Total
	}
	return 0
}

func (x *ClustersListResponse) GetPublic() []*v1.Cluster {
	if x != nil {
		if x.xxx_hidden_Public != nil {
			return *x.xxx_hidden_Public
		}
	}
	return nil
}

func (x *ClustersListResponse) GetPrivate() []*Cluster {
	if x != nil {
		if x.xxx_hidden_Private != nil {
			return *x.xxx_hidden_Private
		}
	}
	return nil
}

func (x *ClustersListResponse) SetSize(v int32) {
	x.xxx_hidden_Size = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ClustersListResponse) SetTotal(v int32) {
	x.xxx_hidden_Total = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ClustersListResponse) SetPublic(v []*v1.Cluster) {
	x.xxx_hidden_Public = &v
}

func (x *ClustersListResponse) SetPrivate(v []*Cluster) {
	x.xxx_hidden_Private = &v
}

func (x *ClustersListResponse) HasSize() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClustersListResponse) HasTotal() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClustersListResponse) ClearSize() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Size = 0
}

func (x *ClustersListResponse) ClearTotal() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Total = 0
}

type ClustersListResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Size    *int32
	Total   *int32
	Public  []*v1.Cluster
	Private []*Cluster
}

func (b0 ClustersListResponse_builder) Build() *ClustersListResponse {
	m0 := &ClustersListResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Size != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Size = *b.Size
	}
	if b.Total != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Total = *b.Total
	}
	x.xxx_hidden_Public = &b.Public
	x.xxx_hidden_Private = &b.Private
	return m0
}

type ClustersGetRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClustersGetRequest) Reset() {
	*x = ClustersGetRequest{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersGetRequest) ProtoMessage() {}

func (x *ClustersGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersGetRequest) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *ClustersGetRequest) SetId(v string) {
	x.xxx_hidden_Id = v
}

type ClustersGetRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 ClustersGetRequest_builder) Build() *ClustersGetRequest {
	m0 := &ClustersGetRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type ClustersGetResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Public  *v1.Cluster            `protobuf:"bytes,1,opt,name=public,proto3"`
	xxx_hidden_Private *Cluster               `protobuf:"bytes,2,opt,name=private,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClustersGetResponse) Reset() {
	*x = ClustersGetResponse{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersGetResponse) ProtoMessage() {}

func (x *ClustersGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersGetResponse) GetPublic() *v1.Cluster {
	if x != nil {
		return x.xxx_hidden_Public
	}
	return nil
}

func (x *ClustersGetResponse) GetPrivate() *Cluster {
	if x != nil {
		return x.xxx_hidden_Private
	}
	return nil
}

func (x *ClustersGetResponse) SetPublic(v *v1.Cluster) {
	x.xxx_hidden_Public = v
}

func (x *ClustersGetResponse) SetPrivate(v *Cluster) {
	x.xxx_hidden_Private = v
}

func (x *ClustersGetResponse) HasPublic() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Public != nil
}

func (x *ClustersGetResponse) HasPrivate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Private != nil
}

func (x *ClustersGetResponse) ClearPublic() {
	x.xxx_hidden_Public = nil
}

func (x *ClustersGetResponse) ClearPrivate() {
	x.xxx_hidden_Private = nil
}

type ClustersGetResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Public  *v1.Cluster
	Private *Cluster
}

func (b0 ClustersGetResponse_builder) Build() *ClustersGetResponse {
	m0 := &ClustersGetResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Public = b.Public
	x.xxx_hidden_Private = b.Private
	return m0
}

type ClustersCreateRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Public  *v1.Cluster            `protobuf:"bytes,1,opt,name=public,proto3"`
	xxx_hidden_Private *Cluster               `protobuf:"bytes,2,opt,name=private,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClustersCreateRequest) Reset() {
	*x = ClustersCreateRequest{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersCreateRequest) ProtoMessage() {}

func (x *ClustersCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersCreateRequest) GetPublic() *v1.Cluster {
	if x != nil {
		return x.xxx_hidden_Public
	}
	return nil
}

func (x *ClustersCreateRequest) GetPrivate() *Cluster {
	if x != nil {
		return x.xxx_hidden_Private
	}
	return nil
}

func (x *ClustersCreateRequest) SetPublic(v *v1.Cluster) {
	x.xxx_hidden_Public = v
}

func (x *ClustersCreateRequest) SetPrivate(v *Cluster) {
	x.xxx_hidden_Private = v
}

func (x *ClustersCreateRequest) HasPublic() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Public != nil
}

func (x *ClustersCreateRequest) HasPrivate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Private != nil
}

func (x *ClustersCreateRequest) ClearPublic() {
	x.xxx_hidden_Public = nil
}

func (x *ClustersCreateRequest) ClearPrivate() {
	x.xxx_hidden_Private = nil
}

type ClustersCreateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Public  *v1.Cluster
	Private *Cluster
}

func (b0 ClustersCreateRequest_builder) Build() *ClustersCreateRequest {
	m0 := &ClustersCreateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Public = b.Public
	x.xxx_hidden_Private = b.Private
	return m0
}

type ClustersCreateResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Public  *v1.Cluster            `protobuf:"bytes,1,opt,name=public,proto3"`
	xxx_hidden_Private *Cluster               `protobuf:"bytes,2,opt,name=private,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClustersCreateResponse) Reset() {
	*x = ClustersCreateResponse{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersCreateResponse) ProtoMessage() {}

func (x *ClustersCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersCreateResponse) GetPublic() *v1.Cluster {
	if x != nil {
		return x.xxx_hidden_Public
	}
	return nil
}

func (x *ClustersCreateResponse) GetPrivate() *Cluster {
	if x != nil {
		return x.xxx_hidden_Private
	}
	return nil
}

func (x *ClustersCreateResponse) SetPublic(v *v1.Cluster) {
	x.xxx_hidden_Public = v
}

func (x *ClustersCreateResponse) SetPrivate(v *Cluster) {
	x.xxx_hidden_Private = v
}

func (x *ClustersCreateResponse) HasPublic() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Public != nil
}

func (x *ClustersCreateResponse) HasPrivate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Private != nil
}

func (x *ClustersCreateResponse) ClearPublic() {
	x.xxx_hidden_Public = nil
}

func (x *ClustersCreateResponse) ClearPrivate() {
	x.xxx_hidden_Private = nil
}

type ClustersCreateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Public  *v1.Cluster
	Private *Cluster
}

func (b0 ClustersCreateResponse_builder) Build() *ClustersCreateResponse {
	m0 := &ClustersCreateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Public = b.Public
	x.xxx_hidden_Private = b.Private
	return m0
}

type ClustersDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClustersDeleteRequest) Reset() {
	*x = ClustersDeleteRequest{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersDeleteRequest) ProtoMessage() {}

func (x *ClustersDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersDeleteRequest) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *ClustersDeleteRequest) SetId(v string) {
	x.xxx_hidden_Id = v
}

type ClustersDeleteRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 ClustersDeleteRequest_builder) Build() *ClustersDeleteRequest {
	m0 := &ClustersDeleteRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type ClustersDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClustersDeleteResponse) Reset() {
	*x = ClustersDeleteResponse{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersDeleteResponse) ProtoMessage() {}

func (x *ClustersDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ClustersDeleteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ClustersDeleteResponse_builder) Build() *ClustersDeleteResponse {
	m0 := &ClustersDeleteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ClustersUpdateRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Public  *v1.Cluster            `protobuf:"bytes,1,opt,name=public,proto3"`
	xxx_hidden_Private *Cluster               `protobuf:"bytes,2,opt,name=private,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClustersUpdateRequest) Reset() {
	*x = ClustersUpdateRequest{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersUpdateRequest) ProtoMessage() {}

func (x *ClustersUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersUpdateRequest) GetPublic() *v1.Cluster {
	if x != nil {
		return x.xxx_hidden_Public
	}
	return nil
}

func (x *ClustersUpdateRequest) GetPrivate() *Cluster {
	if x != nil {
		return x.xxx_hidden_Private
	}
	return nil
}

func (x *ClustersUpdateRequest) SetPublic(v *v1.Cluster) {
	x.xxx_hidden_Public = v
}

func (x *ClustersUpdateRequest) SetPrivate(v *Cluster) {
	x.xxx_hidden_Private = v
}

func (x *ClustersUpdateRequest) HasPublic() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Public != nil
}

func (x *ClustersUpdateRequest) HasPrivate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Private != nil
}

func (x *ClustersUpdateRequest) ClearPublic() {
	x.xxx_hidden_Public = nil
}

func (x *ClustersUpdateRequest) ClearPrivate() {
	x.xxx_hidden_Private = nil
}

type ClustersUpdateRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Public  *v1.Cluster
	Private *Cluster
}

func (b0 ClustersUpdateRequest_builder) Build() *ClustersUpdateRequest {
	m0 := &ClustersUpdateRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Public = b.Public
	x.xxx_hidden_Private = b.Private
	return m0
}

type ClustersUpdateResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Public  *v1.Cluster            `protobuf:"bytes,1,opt,name=public,proto3"`
	xxx_hidden_Private *Cluster               `protobuf:"bytes,2,opt,name=private,proto3"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClustersUpdateResponse) Reset() {
	*x = ClustersUpdateResponse{}
	mi := &file_private_v1_clusters_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClustersUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClustersUpdateResponse) ProtoMessage() {}

func (x *ClustersUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_private_v1_clusters_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClustersUpdateResponse) GetPublic() *v1.Cluster {
	if x != nil {
		return x.xxx_hidden_Public
	}
	return nil
}

func (x *ClustersUpdateResponse) GetPrivate() *Cluster {
	if x != nil {
		return x.xxx_hidden_Private
	}
	return nil
}

func (x *ClustersUpdateResponse) SetPublic(v *v1.Cluster) {
	x.xxx_hidden_Public = v
}

func (x *ClustersUpdateResponse) SetPrivate(v *Cluster) {
	x.xxx_hidden_Private = v
}

func (x *ClustersUpdateResponse) HasPublic() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Public != nil
}

func (x *ClustersUpdateResponse) HasPrivate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Private != nil
}

func (x *ClustersUpdateResponse) ClearPublic() {
	x.xxx_hidden_Public = nil
}

func (x *ClustersUpdateResponse) ClearPrivate() {
	x.xxx_hidden_Private = nil
}

type ClustersUpdateResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Public  *v1.Cluster
	Private *Cluster
}

func (b0 ClustersUpdateResponse_builder) Build() *ClustersUpdateResponse {
	m0 := &ClustersUpdateResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Public = b.Public
	x.xxx_hidden_Private = b.Private
	return m0
}

var File_private_v1_clusters_service_proto protoreflect.FileDescriptor

var file_private_v1_clusters_service_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x21, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xbd,
	0x01, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2d, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x24,
	0x0a, 0x12, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x75, 0x0a, 0x13, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75,
	0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2d, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x16, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x27,
	0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x77, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2d, 0x0a, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x16, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x32, 0x9a, 0x03, 0x0a, 0x08, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x4b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0xbb, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61, 0x62, 0x6f, 0x78,
	0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x5f, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x5f, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x0b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_private_v1_clusters_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_private_v1_clusters_service_proto_goTypes = []any{
	(*ClustersListRequest)(nil),    // 0: private.v1.ClustersListRequest
	(*ClustersListResponse)(nil),   // 1: private.v1.ClustersListResponse
	(*ClustersGetRequest)(nil),     // 2: private.v1.ClustersGetRequest
	(*ClustersGetResponse)(nil),    // 3: private.v1.ClustersGetResponse
	(*ClustersCreateRequest)(nil),  // 4: private.v1.ClustersCreateRequest
	(*ClustersCreateResponse)(nil), // 5: private.v1.ClustersCreateResponse
	(*ClustersDeleteRequest)(nil),  // 6: private.v1.ClustersDeleteRequest
	(*ClustersDeleteResponse)(nil), // 7: private.v1.ClustersDeleteResponse
	(*ClustersUpdateRequest)(nil),  // 8: private.v1.ClustersUpdateRequest
	(*ClustersUpdateResponse)(nil), // 9: private.v1.ClustersUpdateResponse
	(*v1.Cluster)(nil),             // 10: fulfillment.v1.Cluster
	(*Cluster)(nil),                // 11: private.v1.Cluster
}
var file_private_v1_clusters_service_proto_depIdxs = []int32{
	10, // 0: private.v1.ClustersListResponse.public:type_name -> fulfillment.v1.Cluster
	11, // 1: private.v1.ClustersListResponse.private:type_name -> private.v1.Cluster
	10, // 2: private.v1.ClustersGetResponse.public:type_name -> fulfillment.v1.Cluster
	11, // 3: private.v1.ClustersGetResponse.private:type_name -> private.v1.Cluster
	10, // 4: private.v1.ClustersCreateRequest.public:type_name -> fulfillment.v1.Cluster
	11, // 5: private.v1.ClustersCreateRequest.private:type_name -> private.v1.Cluster
	10, // 6: private.v1.ClustersCreateResponse.public:type_name -> fulfillment.v1.Cluster
	11, // 7: private.v1.ClustersCreateResponse.private:type_name -> private.v1.Cluster
	10, // 8: private.v1.ClustersUpdateRequest.public:type_name -> fulfillment.v1.Cluster
	11, // 9: private.v1.ClustersUpdateRequest.private:type_name -> private.v1.Cluster
	10, // 10: private.v1.ClustersUpdateResponse.public:type_name -> fulfillment.v1.Cluster
	11, // 11: private.v1.ClustersUpdateResponse.private:type_name -> private.v1.Cluster
	0,  // 12: private.v1.Clusters.List:input_type -> private.v1.ClustersListRequest
	2,  // 13: private.v1.Clusters.Get:input_type -> private.v1.ClustersGetRequest
	4,  // 14: private.v1.Clusters.Create:input_type -> private.v1.ClustersCreateRequest
	6,  // 15: private.v1.Clusters.Delete:input_type -> private.v1.ClustersDeleteRequest
	8,  // 16: private.v1.Clusters.Update:input_type -> private.v1.ClustersUpdateRequest
	1,  // 17: private.v1.Clusters.List:output_type -> private.v1.ClustersListResponse
	3,  // 18: private.v1.Clusters.Get:output_type -> private.v1.ClustersGetResponse
	5,  // 19: private.v1.Clusters.Create:output_type -> private.v1.ClustersCreateResponse
	7,  // 20: private.v1.Clusters.Delete:output_type -> private.v1.ClustersDeleteResponse
	9,  // 21: private.v1.Clusters.Update:output_type -> private.v1.ClustersUpdateResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_private_v1_clusters_service_proto_init() }
func file_private_v1_clusters_service_proto_init() {
	if File_private_v1_clusters_service_proto != nil {
		return
	}
	file_private_v1_cluster_type_proto_init()
	file_private_v1_clusters_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_private_v1_clusters_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_private_v1_clusters_service_proto_rawDesc), len(file_private_v1_clusters_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_private_v1_clusters_service_proto_goTypes,
		DependencyIndexes: file_private_v1_clusters_service_proto_depIdxs,
		MessageInfos:      file_private_v1_clusters_service_proto_msgTypes,
	}.Build()
	File_private_v1_clusters_service_proto = out.File
	file_private_v1_clusters_service_proto_goTypes = nil
	file_private_v1_clusters_service_proto_depIdxs = nil
}
