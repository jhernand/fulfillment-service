//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

syntax = "proto3";

package private.v1;

import "fulfillment/v1/cluster_type.proto";
import "private/v1/cluster_type.proto";

message ClustersListRequest {
  optional int32 offset = 1;
  optional int32 limit = 2;
  optional string filter = 3;
}

message ClustersListResponse {
  optional int32 size = 1;
  optional int32 total = 2;
  repeated fulfillment.v1.Cluster public = 3;
  repeated Cluster private = 4;
}

message ClustersGetRequest {
  string id = 1;
}

message ClustersGetResponse {
  fulfillment.v1.Cluster public = 1;
  Cluster private = 2;
}

message ClustersCreateRequest {
  fulfillment.v1.Cluster public = 1;
  Cluster private = 2;
}

message ClustersCreateResponse {
  fulfillment.v1.Cluster public = 1;
  Cluster private = 2;
}

message ClustersDeleteRequest {
  string id = 1;
}

message ClustersDeleteResponse {}

message ClustersUpdateRequest {
  fulfillment.v1.Cluster public = 1;
  Cluster private = 2;
}

message ClustersUpdateResponse {
  fulfillment.v1.Cluster public = 1;
  Cluster private = 2;
}

service Clusters {
  rpc List(ClustersListRequest) returns (ClustersListResponse) {}
  rpc Get(ClustersGetRequest) returns (ClustersGetResponse) {}
  rpc Create(ClustersCreateRequest) returns (ClustersCreateResponse) {}
  rpc Delete(ClustersDeleteRequest) returns (ClustersDeleteResponse) {}
  rpc Update(ClustersUpdateRequest) returns (ClustersUpdateResponse) {}
}
