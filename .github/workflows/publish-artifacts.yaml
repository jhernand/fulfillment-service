#
# Copyright (c) 2025 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#

name: Publish artifacts

on:
  push:
    branches:
    - main
    tags:
    - 'v*'

jobs:

  publish-image:
    name: Publish image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.run.outputs.version }}
      reference: ${{ steps.run.outputs.reference }}
    steps:
    - uses: actions/checkout@v4
    - id: run
      run: |
        # Login to the registry:
        registry="ghcr.io"
        podman login --username "${{ github.actor }}" --password "${{ secrets.GITHUB_TOKEN }}" "${registry}"

        # Determine the image version:
        version="$(git describe --tags)"
        reference="${registry}/${{ github.repository }}:${version}"

        # Build the image:
        podman build -t "${reference}" .
        podman push "${reference}"

        # Push the image again with the `latest` tag:
        latest="${registry}/${{ github.repository }}:latest"
        podman tag "${reference}" "${latest}"
        podman push "${latest}"

        # Write the version and image reference to the output:
        cat > "${GITHUB_OUTPUT}" <<.
        version=${version}
        reference=${reference}
        .

  publish-chart:
    name: Publish chart
    runs-on: ubuntu-latest
    needs: publish-image
    if: ${{ success() }}
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.run.outputs.version }}
      reference: ${{ steps.run.outputs.reference }}
    steps:
    - uses: actions/checkout@v4
    - id: run
      run: |
        # Login to the registry:
        registry="ghcr.io"
        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login "${registry}" --username "${{ github.actor }}" --password-stdin

        # The version of the chart shouldn't have the `v` prefix:
        version="${{ needs.publish-image.outputs.version }}"
        version="${version#v}"

        # Package the chart:
        helm package chart --version "${version}" --app-version "${version}"

        # Push the chart to the image registry:
        name="$(cat chart/Chart.yaml | yq -r '.name')"
        chart="${name}-${version}.tgz"
        reference="oci://${registry}/${{ github.repository_owner }}/charts"
        helm push "${chart}" "${reference}"

        # Write the version and chart reference to the output:
        cat > "${GITHUB_OUTPUT}" <<.
        version=${version}
        reference=${reference}
        .

  publish-proto:
    name: Publish proto
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: bufbuild/buf-action@v1
      with:
        setup_only: true
        token: ${{ secrets.BUF_TOKEN }}
    - run: |
        buf push --label "${{ github.ref_name }}"