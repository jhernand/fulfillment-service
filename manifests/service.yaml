#
# Copyright (c) 2025 Red Hat Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fulfillment-service
spec:
  selector:
    matchLabels:
      app: fulfillment-service
  replicas: 1
  template:
    metadata:
      labels:
        app: fulfillment-service
    spec:
      volumes:
      - name: sockets
        emptyDir:
          medium: Memory
      - name: envoy
        configMap:
          name: fulfillment-service-envoy
      - name: envoy-tls
        secret:
          secretName: fulfillment-service-tls
      containers:

      - name: server
        image: fulfillment-service
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sockets
          mountPath: /run/sockets
        command:
        - /usr/local/bin/fulfillment-service
        - start
        - server
        - --log-level=debug
        - --log-headers=true
        - --log-bodies=true
        - --db-url=postgres://service:service123@fulfillment-database:5432/service
        - --grpc-listener-network=unix
        - --grpc-listener-address=/run/sockets/server.socket

      - name: gateway
        image: fulfillment-service
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sockets
          mountPath: /run/sockets
        command:
        - /usr/local/bin/fulfillment-service
        - start
        - gateway
        - --log-level=debug
        - --log-headers=true
        - --log-bodies=true
        - --http-listener-network=unix
        - --http-listener-address=/run/sockets/gateway.socket
        - --grpc-server-network=unix
        - --grpc-server-address=/run/sockets/server.socket
        - --grpc-server-plaintext

      - name: envoy
        image: envoy
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sockets
          mountPath: /run/sockets
        - name: envoy
          mountPath: /etc/envoy
        - name: envoy-tls
          mountPath: /etc/envoy/tls
        command:
        - envoy
        - --config-path
        - /etc/envoy/config.yaml
        ports:
        - name: api
          protocol: TCP
          containerPort: 8000

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: fulfillment-service-envoy
data:
  config.yaml: |
    admin:
      address:
        pipe:
          path: /run/sockets/admin.socket

    static_resources:

      listeners:

      - name: ingress
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
              use_remote_address: true
              xff_num_trusted_hops: 1
              stat_prefix: ingress
              route_config:
                name: backend
                virtual_hosts:
                - name: all
                  domains:
                  - "*"
                  typed_per_filter_config:
                    envoy.filters.http.cors:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                      allow_origin_string_match:
                      - safe_regex:
                          regex: ".*"
                      allow_methods: "POST"
                      allow_headers: "Content-Type, X-User-Agent, X-Grpc-Web"
                      allow_credentials: true
                      max_age: "86400"
                  routes:

                  - name: gateway
                    match:
                      prefix: /api
                    route:
                      cluster: gateway
                      timeout: 300s

                  - name: server
                    match:
                      prefix: /
                    route:
                      cluster: server
                      timeout: 300s

              http_filters:
              - name: envoy.filters.http.grpc_web
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
              - name: envoy.filters.http.cors
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                - http1.1
                - h2
                tls_certificates:
                - certificate_chain:
                    filename: /etc/envoy/tls/tls.crt
                  private_key:
                    filename: /etc/envoy/tls/tls.key

      clusters:

      - name: server
        connect_timeout: 1s
        type: STATIC
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: server
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /run/sockets/server.socket

      - name: gateway
        connect_timeout: 1s
        type: STATIC
        lb_policy: ROUND_ROBIN
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: gateway
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /run/sockets/gateway.socket

---

apiVersion: v1
kind: Service
metadata:
  name: fulfillment-api
  labels:
    app: fulfillment-service
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: fulfillment-service-tls
spec:
  selector:
    app: fulfillment-service
  ports:
  - name: api
    port: 8000
    targetPort: api

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: fulfillment-api
spec:
  to:
    kind: Service
    name: fulfillment-api
  port:
    targetPort: api
  tls:
    termination: reencrypt
